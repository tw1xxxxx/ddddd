#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π API AlphaTruck Shop
"""

import requests
import json
from datetime import datetime, date

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://127.0.0.1:8000/api"

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö API endpoints"""
    
    print("üöó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API AlphaTruck Shop")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∞—Ä–æ–∫ (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Brands API...")
    try:
        response = requests.get(f"{BASE_URL}/brands/")
        if response.status_code == 200:
            brands = response.json()
            print(f"‚úÖ Brands API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –º–∞—Ä–æ–∫: {len(brands.get('results', brands))}")
        else:
            print(f"‚ùå Brands API –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Brands API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Models API...")
    try:
        response = requests.get(f"{BASE_URL}/models/")
        if response.status_code == 200:
            models = response.json()
            print(f"‚úÖ Models API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models.get('results', models))}")
        else:
            print(f"‚ùå Models API –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Models API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Cars API...")
    try:
        response = requests.get(f"{BASE_URL}/cars/")
        if response.status_code == 200:
            cars = response.json()
            print(f"‚úÖ Cars API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {len(cars.get('results', cars))}")
        else:
            print(f"‚ùå Cars API –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Cars API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...")
    try:
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä–æ–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ
        response = requests.get(f"{BASE_URL}/brands/?country=Germany")
        if response.status_code == 200:
            brands = response.json()
            print(f"‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–µ–º–µ—Ü–∫–∏—Ö –º–∞—Ä–æ–∫: {len(brands.get('results', brands))}")
        else:
            print(f"‚ùå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏...")
    try:
        response = requests.get(f"{BASE_URL}/cars/?page_size=5")
        if response.status_code == 200:
            cars = response.json()
            if 'count' in cars:
                print(f"‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—Å–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {cars['count']}, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(cars['results'])}")
            else:
                print(f"‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(cars)}")
        else:
            print(f"‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ü–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
    print("2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω: POST /api/token/")
    print("3. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ endpoints")

def test_authentication():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
    auth_data = {
        "username": "admin123",
        "password": input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è admin123: ")
    }
    
    try:
        response = requests.post(f"{BASE_URL}/token/", json=auth_data)
        if response.status_code == 200:
            token_data = response.json()
            print(f"‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"Access token: {token_data.get('access', '–ù–µ –ø–æ–ª—É—á–µ–Ω')[:20]}...")
            return token_data.get('access')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_authenticated_endpoints(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö endpoints"""
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö endpoints")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    print("\nüîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö endpoints...")
    
    # –¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
    try:
        response = requests.get(f"{BASE_URL}/customers/", headers=headers)
        if response.status_code == 200:
            customers = response.json()
            print(f"‚úÖ Customers API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(customers.get('results', customers))}")
        else:
            print(f"‚ùå Customers API –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Customers API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    try:
        response = requests.get(f"{BASE_URL}/employees/", headers=headers)
        if response.status_code == 200:
            employees = response.json()
            print(f"‚úÖ Employees API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(employees.get('results', employees))}")
        else:
            print(f"‚ùå Employees API –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Employees API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

if __name__ == "__main__":
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_api_endpoints()
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print("\n" + "=" * 50)
    test_auth = input("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é? (y/n): ").lower()
    if test_auth == 'y':
        token = test_authentication()
        if token:
            test_authenticated_endpoints(token)
